plugins {
	id 'java'
//    id 'org.flywaydb.flyway' version '11.11.2'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.netflix.dgs.codegen' version '7.0.3'
}

group = 'com.dawson'
version = '0.0.1-SNAPSHOT'
description = 'Dawson DGSPlayground'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
	mavenCentral()
}

ext {
    set('netflixDgsVersion', "10.4.0")
    set('springAiVersion', "1.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.ai:spring-ai-starter-mcp-server-webmvc'
//    implementation 'org.flywaydb:flyway-core:11.11.2'
//    implementation 'org.flywaydb:flyway-database-postgresql:11.11.2'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'

    testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
        mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'com.dawson.dgs_playground_api.codegen'
	generateClient = true
}

//flyway {
//    url = 'jdbc:postgresql://localhost:5432/net'
//    user = 'myuser'
//    password = 'mypassword'
//    schemas = ['net_schema']
//    locations = ['classpath:db/migration']
//    driver = 'org.postgresql.Driver'
//    baselineOnMigrate = true
//}

tasks.named('test') {
	useJUnitPlatform()
}
